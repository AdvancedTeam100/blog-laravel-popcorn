{"version":3,"file":"static/js/902.8e4dc4dd.chunk.js","mappings":"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","sources":["pages/security/authentication/signIn.tsx"],"sourcesContent":["import React, { ReactElement, FC, useState, useRef } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Link,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Google,\r\n  Twitter,\r\n  Facebook,\r\n} from \"@mui/icons-material\";\r\nimport { Formik, FormikProps, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthStart } from \"../../../redux/actionCreators/authActions\";\r\nimport { remove } from \"lodash\";\r\nimport { ThemeColor } from \"../../../styles/GlobalStyle\";\r\n\r\nconst theme = createTheme({\r\n  components: {\r\n    MuiFormHelperText: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst SignIn: FC = (): ReactElement => {\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const dispatch = useDispatch(); // Add this line to get the dispatch function\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  const handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  interface values {\r\n    userId: string;\r\n    password: string;\r\n  }\r\n\r\n  const initialValues: values = {\r\n    userId: \"\",\r\n    password: \"\",\r\n  };\r\n  \r\n  const validationSchema = Yup.object({\r\n    userId: Yup.string().required(\"ユーザーIDを入力してください\"),\r\n    password: Yup.string().required(\"パスワードを入力してください\"),\r\n  });\r\n\r\n  const handleSubmit = (values: values) => {\r\n    dispatch(AuthStart(values.userId, values.password)); \r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"block\"\r\n      m=\"auto\"\r\n      px={3}\r\n      // pt={3}\r\n      width={500}\r\n      borderRadius={4}\r\n      // boxShadow={md: 12, xs:}\r\n      \r\n      \r\n      sx={{ boxShadow: {xs: 0, md: 12, ms:12}, backgroundColor: \"#ffffff\" }}\r\n    >\r\n      <Box\r\n        flexGrow={1}\r\n        display=\"flex\"\r\n        py={2}\r\n        px={2}\r\n        sx={{\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"inherit\",\r\n        }}\r\n      >\r\n        <Typography sx={{fontSize: '2rem', color: ThemeColor.main, fontWeight: '600'}} variant=\"h4\">ログイン</Typography>\r\n      </Box>\r\n      <Box display=\"block\" px={2} mb={2}>\r\n        <ThemeProvider theme={theme}>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {(formikProps: FormikProps<values>) => (\r\n              <Form>\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  sx={{mt: 2, fontSize: { xs: \"9pt\", sm: \"9pt\", md: \"10pt\" } }}\r\n                >\r\n                  {/* <InputLabel\r\n                    htmlFor=\"outlined-input-user-id\"\r\n                    sx={{ fontSize: { xs: \"9pt\", sm: \"10pt\", md: \"11pt\" } }}\r\n                  >\r\n                    ユーザーID\r\n                  </InputLabel> */}\r\n                  <Typography sx={{fontSize: '1.1rem',mb: 1,ml: 1,  fontWeight: '600'}} variant=\"h4\">ログイン</Typography>\r\n\r\n                  <Field\r\n                    as={OutlinedInput}\r\n                    id=\"outlined-input-user-id\"\r\n                    type=\"text\"\r\n                    placeholder=\"ユーザーID\"\r\n                    sx={{fontSize: '1.2rem'}}\r\n                    name=\"userId\"\r\n                    value={formikProps.values.userId} // Update the 'value' attribute\r\n                    aria-describedby=\"my-helper-text\"\r\n                  />\r\n                  {!!formikProps.touched.userId &&\r\n                    !!formikProps.errors.userId && ( // New conditional render\r\n                      <FormHelperText error>\r\n                        {formikProps.errors.userId}\r\n                      </FormHelperText>\r\n                    )}\r\n\r\n                  <br></br>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  sx={{ mt: 4,mb: 4,  fontSize: { xs: \"9pt\", sm: \"9pt\", md: \"10pt\" } }}\r\n                >\r\n                  <Typography sx={{fontSize: '1.1rem',mb: 1,  fontWeight: '600'}} variant=\"h4\">パスワード</Typography>\r\n\r\n                  <Field\r\n                    as={OutlinedInput}\r\n                    id=\"outlined-adornment-password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    name=\"password\"\r\n                    placeholder=\"パスワード\"\r\n                    sx={{fontSize: '1.2rem'}}\r\n                    value={formikProps.values.password} // Update the 'value' attribute\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    \r\n                    // label=\"パスワード\"\r\n                  />\r\n                  {!!formikProps.touched.password &&\r\n                    !!formikProps.errors.password && ( // New conditional render\r\n                      <FormHelperText error>\r\n                        {formikProps.errors.password}\r\n                      </FormHelperText>\r\n                    )}\r\n                </FormControl>\r\n           \r\n                <Box display=\"block\" justifyContent=\"center\" py={2}>\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    sx={{ fontSize: { xs: \"1.1rem\", sm: \"1.1rem\", md: \"1.3rem\" } }}\r\n                  >\r\n                    ログインする\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </ThemeProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"names":["theme","createTheme","components","MuiFormHelperText","styleOverrides","root","color","React","showPassword","setShowPassword","dispatch","useDispatch","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","validationSchema","Yup","userId","required","password","display","m","px","width","borderRadius","sx","boxShadow","xs","md","ms","backgroundColor","flexGrow","py","justifyContent","fontSize","ThemeColor","fontWeight","variant","mb","initialValues","onSubmit","values","AuthStart","formikProps","fullWidth","size","mt","sm","ml","as","OutlinedInput","id","type","placeholder","name","value","touched","errors","error","endAdornment","position","onClick","onMouseDown","edge"],"sourceRoot":""}