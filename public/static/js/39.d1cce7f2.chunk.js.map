{"version":3,"file":"static/js/39.d1cce7f2.chunk.js","mappings":"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","sources":["pages/users/CreateUser.tsx"],"sourcesContent":["import { useState, useEffect, useRef, ChangeEvent } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ja\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Typography,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  Grid,\r\n  Avatar,\r\n  IconButton,\r\n  SelectChangeEvent,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormLabel,\r\n} from \"@mui/material\";\r\nimport { Category, Edit, Groups } from \"@mui/icons-material\";\r\n\r\nimport { ICategory } from \"../../models/category\";\r\nimport {\r\n  AddLeader,\r\n  AddUser,\r\n  getAllGroups,\r\n  getData,\r\n} from \"../../redux/actionCreators/userActions\";\r\n// import \"../../assets/css/style.css\";\r\nimport { RootState } from \"../../redux/store/store\";\r\nimport { ThemeColor } from \"../../styles/GlobalStyle\";\r\nimport { getAllCategories } from \"../../redux/actionCreators/blogActions\";\r\nimport { Root } from \"react-dom/client\";\r\n\r\ninterface IUser {\r\n  name: string;\r\n  user_id?: string | null;\r\n  role_id: string;\r\n}\r\n\r\nconst CreateUser = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const all_categories = useSelector(\r\n    (state: RootState) => state.blog.all_categories\r\n  );\r\n  const all_groups = useSelector((state: RootState) => state.blog.all_groups);\r\n  const user = useSelector((state: RootState) => state.auth.user );\r\n\r\n\r\n  const avatarInputRef = useRef<HTMLInputElement>(null);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"usertoken\"]);\r\n  const usertoken = cookies.usertoken;\r\n  const [name, setName] = useState(\"\");\r\n  const [read_name, setReadName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState(\"1990-01-01\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user_id, setUserId] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [selectedRole, setSelectedRole] = useState(\"2\");\r\n  const [selectedDevice, setSelectedDevice] = useState(\"1\");\r\n  const [ninetieth_life, setNinetieth_life] = useState(\"\");\r\n  const [work_life, setWork_life] = useState(\"\");\r\n  const [die_life, setDie_life] = useState(\"\");\r\n  const [healthy_life, setHealthy_life] = useState(\"\");\r\n  const [average_life, setAverage_life] = useState(\"\");\r\n  const [status, setStatus] = useState(\"1\");\r\n  const [old, setOld] = useState(0);\r\n\r\n  const [commonData, setCommonData] = useState<ICategory[]>([]);\r\n  const [commonData2, setCommonData2] = useState<ICategory[]>([]);\r\n\r\n  const [groupData, setGroupData] = useState<ICategory[]>([]);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(\"\");\r\n  const [selectedGroup, setSelectedGroup] = useState<any>(null);\r\n  const [teamGroups, setTeamGroups] = useState<any[]>([]);\r\n  const [allowedCommonCategories, setAllowedCommonCategories] = useState<any[]>(\r\n    []\r\n  );\r\n  const [allowedCommon2Categories, setAllowedCommon2Categories] = useState<\r\n    any[]\r\n  >([]);\r\n\r\n  const [allowedGroupCategories, setAllowedGroupCategories] = useState<any[]>(\r\n    []\r\n  );\r\n  const [selectedAvatar, setSelectedAvatar] = useState(\"\");\r\n  const [avatar, setAvatar] = useState<File | null>(null);\r\n  const [showRoleSelection, setShowRoleSelection] = useState(true);\r\n\r\n  let role: number = 0;\r\n\r\n  if (usertoken) {\r\n    const user: IUser = jwt_decode(usertoken);\r\n    role = user ? parseInt(user.role_id, 10) : 4;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (role == 2) {\r\n      setShowRoleSelection(false);\r\n      setSelectedRole(\"3\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (all_groups) {\r\n      const filteredGroups = all_groups.filter(\r\n        (group) => group.id != 1 && group.id != 2\r\n      );\r\n      setTeamGroups(filteredGroups);\r\n    } \r\n    if(role == 2) {\r\n      if(user)\r\n      setSelectedGroupId(user?.group_id);\r\n    }\r\n  }, [all_groups]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(all_categories) {\r\n      setCommonData(all_categories['1']);\r\n      setCommonData2(all_categories['2']);\r\n      setGroupData(all_categories[`${user?.group_id}`]);\r\n    }\r\n  }, [all_categories]);\r\n\r\n  useEffect(() => {\r\n    setOld(2);\r\n  }, [dateOfBirth])\r\n\r\n  const handleRoleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedRole(event.target.value);\r\n    if (!selectedGroupId) {\r\n      setGroupData([]);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleSelectChange = (event: SelectChangeEvent) => {\r\n    setSelectedGroupId(event.target.value as string);\r\n    let tmp = null;\r\n    teamGroups.forEach((group) => {\r\n      if (group.id == event.target.value) {\r\n        tmp = group;\r\n        return;\r\n      }\r\n    });\r\n    setSelectedGroup(tmp);\r\n\r\n    if(all_categories) {\r\n      setGroupData(all_categories[event.target.value as string]);\r\n    }\r\n\r\n  };\r\n\r\n  const handleDeviceChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedDevice(event.target.value);\r\n  };\r\n\r\n  //common1 group\r\n  const handleCommonCheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedCommonCategories((prevValues: any[]) => [...prevValues, value]);\r\n      console.log(allowedCommonCategories);\r\n    } else {\r\n      setAllowedCommonCategories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  //common2 group\r\n  const handleCommon2CheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedCommon2Categories((prevValues: any[]) => [\r\n        ...prevValues,\r\n        value,\r\n      ]);\r\n      console.log(allowedCommonCategories);\r\n    } else {\r\n      setAllowedCommon2Categories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  //my group\r\n  const handleGroupCheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedGroupCategories((prevValues: any[]) => [...prevValues, value]);\r\n    } else {\r\n      setAllowedGroupCategories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAvatarUpload = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const fileType = file.type.split(\"/\")[0]; // Get the file type\r\n\r\n      if (fileType === \"image\") {\r\n        setSelectedAvatar(URL.createObjectURL(file));\r\n        setAvatar(file);\r\n      } else {\r\n        console.error(\"Invalid file type. Please select an image file.\");\r\n      }\r\n    } else {\r\n      setSelectedAvatar(\"\");\r\n    }\r\n  };\r\n\r\n  const handleEditAvatar = () => {\r\n    if (avatarInputRef.current) {\r\n      avatarInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    const formattedDate = dayjs(date).format(\"YYYY-MM-DD\");\r\n    console.log(formattedDate);\r\n    setDateOfBirth(formattedDate);\r\n    // Do something with the formattedDate (e.g., update state)\r\n  };\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    if (avatar) {\r\n      formData.append(\"avatar\", avatar);\r\n    }\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"read_name\", read_name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    formData.append(\"birthday\", dateOfBirth);\r\n    formData.append(\"user_id\", user_id);\r\n    formData.append(\"phone_number\", phone);\r\n    formData.append(\"phone_device\", selectedDevice);\r\n    formData.append(\"role_id\", selectedRole);\r\n    formData.append(\"group_id\", selectedGroupId);\r\n    formData.append(\"status\", \"1\");\r\n    formData.append(\"memo\", memo);\r\n    formData.append(\"ninetieth_life\", ninetieth_life);\r\n    formData.append(\"work_life\", work_life);\r\n    formData.append(\"die_life\", die_life);\r\n    formData.append(\"healthy_life\", healthy_life);\r\n    formData.append(\"average_life\", average_life);\r\n    formData.append(\"status\", status);\r\n\r\n    let allowed_categories = null;\r\n    \r\n    if(role == 1 && selectedRole == '2') {\r\n      allowed_categories = {\r\n        '2' : allowedCommon2Categories,\r\n      }\r\n    } else  if(role ==1 && selectedRole == '3') {\r\n      allowed_categories = {\r\n        '1' : allowedCommonCategories,\r\n        [selectedGroupId] : allowedGroupCategories,\r\n      }\r\n    } else if(role == 2) {\r\n      allowed_categories = {\r\n        '1' : allowedCommonCategories,\r\n        [selectedGroupId] : allowedGroupCategories\r\n      }\r\n    }\r\n\r\n    formData.append(\"allowed_categories\", JSON.stringify(allowed_categories));\r\n\r\n    if (role == 1 && selectedRole == \"2\") {\r\n      dispatch(AddLeader(navigate, formData));\r\n    } else {\r\n      dispatch(AddUser(navigate, formData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: { xs: \"100%\", ms: \"90%\", md: \"80%\", lg: \"50%\" }, mb: 2 }}>\r\n      <Typography\r\n        sx={{\r\n          fontSize: \"2rem\",\r\n          mt: 1,\r\n          mb: 1,\r\n          color: ThemeColor.main,\r\n          fontWeight: \"600\",\r\n        }}\r\n        variant=\"h4\"\r\n      >\r\n        ユーザー登録\r\n      </Typography>\r\n\r\n      <Card\r\n        sx={{\r\n          // mt: 1,\r\n          border: \"solid 2px initial\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {/* <Divider sx={{ border: \"1px dotted #2196f3\" }} /> */}\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                position: \"relative\",\r\n                width: 130,\r\n                height: 130,\r\n                m: \"auto\",\r\n                p: 0,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Avatar\r\n                sx={{\r\n                  width: 130,\r\n                  height: 130,\r\n                  m: \"auto\",\r\n                  p: 0,\r\n                  justifyContent: \"center\",\r\n                }}\r\n                src={selectedAvatar ? selectedAvatar : \"\"}\r\n              />\r\n              <IconButton\r\n                id=\"edit-avatar-icon\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: \"50%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%, -50%)\",\r\n                }}\r\n                onClick={handleEditAvatar}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  component=\"label\"\r\n                  sx={{ display: \"none\" }}\r\n                >\r\n                  Avatar\r\n                  <input\r\n                    ref={avatarInputRef}\r\n                    id=\"avatar-upload\"\r\n                    type=\"file\"\r\n                    onChange={handleAvatarUpload}\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                </Button>\r\n                <Edit sx={{ width: \"40px\", height: \"40px\" }} />\r\n              </IconButton>\r\n            </Box>\r\n            <Stack spacing={2} direction=\"row\" sx={{ mb: 4, mt: 4 }}>\r\n              <TextField\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                label=\"名前\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                style={{ borderRadius: \"10px\" }}\r\n                value={name}\r\n                fullWidth\r\n                required\r\n              />\r\n              <TextField\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                label=\"読み\"\r\n                onChange={(e) => setReadName(e.target.value)}\r\n                value={read_name}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Stack>\r\n            {showRoleSelection && (\r\n              <Card\r\n                sx={{\r\n                  marginTop: \"20px\",\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"ユーザー権限\" sx={{ fontSize: \"16px\" }} />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  <FormControl>\r\n                    <RadioGroup\r\n                      row\r\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                      name=\"row-radio-buttons-group\"\r\n                      value={selectedRole}\r\n                      onChange={handleRoleChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"2\"\r\n                        control={<Radio />}\r\n                        label=\"管理者権限(グループリーダー)\"\r\n                        defaultChecked\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"3\"\r\n                        control={<Radio />}\r\n                        label=\"閲覧のみユーザー\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"3\" && role == 1 && (\r\n              <FormControl sx={{ mt: 4 }} fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  グループを選択\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"group-select-label\"\r\n                  id=\"user-group-select\"\r\n                  value={selectedGroupId}\r\n                  label=\"グループを選択\"\r\n                  onChange={handleSelectChange}\r\n                  required\r\n                >\r\n                  {teamGroups?.map((group: any) => {\r\n                    return (\r\n                      <MenuItem key={group.id + 1000} value={group.id}>\r\n                        {group.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n\r\n            <Typography sx={{ mt: 4, mb: 1, ml: 1 }} variant=\"body1\">\r\n              生年月日\r\n            </Typography>\r\n\r\n            <Box sx={{ mb: 4, width: \"100%\" }}>\r\n              <DatePicker\r\n                format=\"YYYY/MM/DD\"\r\n                onChange={handleDateChange}\r\n                defaultValue={dayjs(\"1990-01-01\")}\r\n              />\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"メールアドレス\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"phone\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"電話番号\"\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  value={phone}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"ログインID\"\r\n                  onChange={(e) => setUserId(e.target.value)}\r\n                  value={user_id}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"ログインパスワード\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                  required\r\n                  fullWidth\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Card\r\n              sx={{\r\n                mb: 4,\r\n                border: \"solid 1px #2196f3\",\r\n              }}\r\n            >\r\n              <CardHeader title=\"使用スマホ端末\" />\r\n              <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n              <CardContent>\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={selectedDevice}\r\n                    onChange={handleDeviceChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"iPhone\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"2\"\r\n                      control={<Radio />}\r\n                      label=\"android\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              label=\"メモ欄、 職業、 性格など\"\r\n              onChange={(e) => setMemo(e.target.value)}\r\n              value={memo}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              sx={{ mb: 4 }}\r\n            />\r\n\r\n            <Card\r\n              sx={{\r\n                mb: 4,\r\n                border: \"solid 1px #2196f3\",\r\n              }}\r\n            >\r\n              <CardHeader title=\"残りの寿命設定\" />\r\n              <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n              <CardContent>\r\n                {/* <FormControl> */}\r\n                <List>\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・人生の9割が確定する(30歳)まで\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={ninetieth_life}\r\n                      onChange={(e) => setNinetieth_life(e.target.value)}\r\n                      inputProps={{ min: 0, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      年\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・労働寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={work_life}\r\n                      onChange={(e) => setWork_life(e.target.value)}\r\n                      inputProps={{ min: 0, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      年\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・死んでいるかもしれない日まで\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={die_life}\r\n                      onChange={(e) => setDie_life(e.target.value)}\r\n                      inputProps={{ min: 0, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      年\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・健康寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={healthy_life}\r\n                      onChange={(e) => setHealthy_life(e.target.value)}\r\n                      inputProps={{ min: 0, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      年\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・平均寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={average_life}\r\n                      onChange={(e) => setAverage_life(e.target.value)}\r\n                      inputProps={{ min: 0, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      年\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                </List>\r\n\r\n                {/* </FormControl> */}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {groupData?.length > 0 && selectedRole === \"3\" && (selectedGroup || role == 2) && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader\r\n                  title={\r\n                    (role == 2 ? \"私の\" : selectedGroup?.name) +\r\n                    \"グループ内のカテゴリ閲覧権限\"\r\n                  }\r\n                />\r\n\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {groupData?.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedGroupCategories.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleGroupCheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"3\" && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"全体共通グループ 【1】 内のカテゴリ閲覧権限\" />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {commonData?.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedCommonCategories.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleCommonCheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"2\" && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"全体共通グループ 【2】 内のカテゴリ閲覧権限\" />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {commonData2.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedCommon2Categories.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleCommon2CheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            <Box sx={{ ml: 0, mb: 2 }}>\r\n              <FormLabel\r\n                id=\"demo-radio-buttons-group-label\"\r\n                sx={{ fontSize: \"1.5rem\", ml: 1, fontWeight: 400 }}\r\n              >\r\n                ステータス\r\n              </FormLabel>\r\n              <Card sx={{ mt: 2 }}>\r\n                <CardContent>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"status-radio-buttons-group-label\"\r\n                    defaultValue=\"1\"\r\n                    name=\"radio-buttons-group\"\r\n                    onChange={handleStatusChange}\r\n                    sx={{ ml: 2 }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"OK\"\r\n                      defaultChecked\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"2\"\r\n                      control={<Radio />}\r\n                      label=\"一時停止\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"3\"\r\n                      control={<Radio />}\r\n                      label=\"ブロック\"\r\n                    />\r\n                  </RadioGroup>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              sx={{ textAlign: \"right\", mb: 2, float: \"right\" }}\r\n            >\r\n              登録する\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","all_categories","useSelector","state","blog","all_groups","user","auth","avatarInputRef","useRef","useCookies","cookies","usertoken","useState","name","setName","read_name","setReadName","email","setEmail","dateOfBirth","setDateOfBirth","password","setPassword","user_id","setUserId","phone","setPhone","memo","setMemo","selectedRole","setSelectedRole","selectedDevice","setSelectedDevice","ninetieth_life","setNinetieth_life","work_life","setWork_life","die_life","setDie_life","healthy_life","setHealthy_life","average_life","setAverage_life","status","setStatus","setOld","commonData","setCommonData","commonData2","setCommonData2","groupData","setGroupData","selectedGroupId","setSelectedGroupId","selectedGroup","setSelectedGroup","teamGroups","setTeamGroups","allowedCommonCategories","setAllowedCommonCategories","allowedCommon2Categories","setAllowedCommon2Categories","allowedGroupCategories","setAllowedGroupCategories","selectedAvatar","setSelectedAvatar","avatar","setAvatar","showRoleSelection","setShowRoleSelection","role","jwt_decode","parseInt","role_id","useEffect","getAllCategories","filteredGroups","filter","group","id","group_id","handleCommonCheckboxChange","event","value","target","checked","prevValues","console","log","v","handleCommon2CheckboxChange","handleGroupCheckboxChange","isChecked","sx","width","xs","ms","md","lg","mb","fontSize","mt","color","ThemeColor","fontWeight","variant","border","onSubmit","preventDefault","formData","FormData","append","allowed_categories","JSON","stringify","AddLeader","AddUser","position","height","m","p","justifyContent","src","top","left","transform","onClick","current","click","component","display","ref","type","onChange","file","files","split","URL","createObjectURL","error","accept","style","spacing","direction","label","e","borderRadius","fullWidth","required","marginTop","title","row","control","defaultChecked","labelId","tmp","forEach","map","ml","format","date","formattedDate","dayjs","defaultValue","container","item","multiline","rows","padding","margin","primary","size","inputProps","min","max","pl","length","checkbox","includes","textAlign","float"],"sourceRoot":""}